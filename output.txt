CPen pen(PS_SOLID, 1, RGB(0, 0, 0));
pDC->SelectObject(&pen);

CBrush brush;
brush.CreateStockObject(NULL_BRUSH);
pDC->SelectObject(&brush);

//------------------------------

std::vector<std::vector<CPoint>> beziers = {
	/* Path 0 */
	{
 		CPoint( 585, 376 ),

		CPoint( 585, 376 ), 
		CPoint( 585, 377 ), 
		CPoint( 585, 377 )
	},
	{
 		CPoint( 578, 398 ),

		CPoint( 578, 398 ), 
		CPoint( 577, 399 ), 
		CPoint( 577, 400 )
	},
	{
 		CPoint( 561, 420 ),

		CPoint( 560, 421 ), 
		CPoint( 558, 422 ), 
		CPoint( 557, 422 ),
		CPoint( 556, 421 ), 
		CPoint( 555, 421 ), 
		CPoint( 554, 419 )
	},
	{
 		CPoint( 532, 433 ),

		CPoint( 532, 434 ), 
		CPoint( 530, 435 ), 
		CPoint( 529, 434 ),
		CPoint( 528, 434 ), 
		CPoint( 527, 434 ), 
		CPoint( 526, 432 )
	},
	{
 		CPoint( 503, 447 ),

		CPoint( 502, 448 ), 
		CPoint( 501, 449 ), 
		CPoint( 499, 448 ),
		CPoint( 498, 448 ), 
		CPoint( 497, 447 ), 
		CPoint( 497, 445 )
	},
	{
 		CPoint( 475, 453 ),

		CPoint( 474, 453 ), 
		CPoint( 474, 453 ), 
		CPoint( 473, 453 ),
		CPoint( 472, 453 ), 
		CPoint( 472, 453 ), 
		CPoint( 472, 453 ),
		CPoint( 472, 452 ), 
		CPoint( 472, 451 ), 
		CPoint( 473, 449 ),
		CPoint( 473, 447 ), 
		CPoint( 474, 445 ), 
		CPoint( 475, 443 )
	},
	{
 		CPoint( 495, 427 ),

		CPoint( 496, 426 ), 
		CPoint( 498, 426 ), 
		CPoint( 499, 427 ),
		CPoint( 500, 427 ), 
		CPoint( 501, 428 ), 
		CPoint( 501, 430 )
	},
	{
 		CPoint( 522, 419 ),

		CPoint( 522, 418 ), 
		CPoint( 524, 417 ), 
		CPoint( 525, 417 ),
		CPoint( 526, 418 ), 
		CPoint( 527, 418 ), 
		CPoint( 528, 419 )
	},
	{
 		CPoint( 548, 404 ),

		CPoint( 549, 403 ), 
		CPoint( 551, 402 ), 
		CPoint( 552, 402 ),
		CPoint( 553, 403 ), 
		CPoint( 554, 403 ), 
		CPoint( 555, 404 )
	},
	{
 		CPoint( 569, 386 ),

		CPoint( 569, 386 ), 
		CPoint( 570, 385 ), 
		CPoint( 570, 384 )
	},
	{
 		CPoint( 577, 374 ),

		CPoint( 578, 374 ), 
		CPoint( 580, 374 ), 
		CPoint( 581, 375 ),
		CPoint( 583, 375 ), 
		CPoint( 584, 375 ), 
		CPoint( 585, 376 )
	},

	/* Path 1 */
	{
 		CPoint( 662, 310 ),

		CPoint( 662, 347 ), 
		CPoint( 633, 376 ), 
		CPoint( 596, 376 ),
		CPoint( 592, 376 ), 
		CPoint( 589, 376 ), 
		CPoint( 585, 376 ),
		CPoint( 584, 375 ), 
		CPoint( 583, 375 ), 
		CPoint( 581, 375 ),
		CPoint( 580, 374 ), 
		CPoint( 579, 374 ), 
		CPoint( 577, 374 ),
		CPoint( 550, 366 ), 
		CPoint( 530, 340 ), 
		CPoint( 530, 310 ),
		CPoint( 530, 273 ), 
		CPoint( 559, 243 ), 
		CPoint( 596, 243 ),
		CPoint( 633, 243 ), 
		CPoint( 662, 273 ), 
		CPoint( 662, 310 )
	},

	/* Path 2 */
	{
 		CPoint( 510, 176 ),

		CPoint( 510, 218 ), 
		CPoint( 480, 253 ), 
		CPoint( 441, 261 ),
		CPoint( 435, 253 ), 
		CPoint( 430, 245 ), 
		CPoint( 424, 238 ),
		CPoint( 407, 220 ), 
		CPoint( 388, 204 ), 
		CPoint( 367, 192 ),
		CPoint( 358, 187 ), 
		CPoint( 348, 183 ), 
		CPoint( 338, 179 ),
		CPoint( 338, 178 ), 
		CPoint( 338, 177 ), 
		CPoint( 338, 176 ),
		CPoint( 338, 128 ), 
		CPoint( 376, 90 ), 
		CPoint( 424, 90 ),
		CPoint( 472, 90 ), 
		CPoint( 510, 128 ), 
		CPoint( 510, 176 )
	},

	/* Path 3 */
	{
 		CPoint( 484, 179 ),

		CPoint( 484, 212 ), 
		CPoint( 458, 238 ), 
		CPoint( 425, 238 ),
		CPoint( 424, 238 ), 
		CPoint( 424, 238 ), 
		CPoint( 424, 238 ),
		CPoint( 407, 220 ), 
		CPoint( 388, 204 ), 
		CPoint( 367, 192 ),
		CPoint( 366, 188 ), 
		CPoint( 366, 184 ), 
		CPoint( 366, 179 ),
		CPoint( 366, 146 ), 
		CPoint( 392, 120 ), 
		CPoint( 425, 120 ),
		CPoint( 458, 120 ), 
		CPoint( 484, 146 ), 
		CPoint( 484, 179 )
	},

	/* Path 4 */
	{
 		CPoint( 216, 181 ),

		CPoint( 206, 185 ), 
		CPoint( 196, 190 ), 
		CPoint( 187, 195 ),
		CPoint( 167, 207 ), 
		CPoint( 149, 223 ), 
		CPoint( 134, 241 ),
		CPoint( 127, 249 ), 
		CPoint( 121, 257 ), 
		CPoint( 115, 266 ),
		CPoint( 74, 260 ), 
		CPoint( 42, 224 ), 
		CPoint( 42, 181 ),
		CPoint( 42, 133 ), 
		CPoint( 81, 94 ), 
		CPoint( 129, 94 ),
		CPoint( 177, 94 ), 
		CPoint( 216, 133 ), 
		CPoint( 216, 181 )
	},

	/* Path 5 */
	{
 		CPoint( 188, 182 ),

		CPoint( 188, 186 ), 
		CPoint( 188, 191 ), 
		CPoint( 187, 195 ),
		CPoint( 167, 207 ), 
		CPoint( 149, 223 ), 
		CPoint( 134, 241 ),
		CPoint( 132, 241 ), 
		CPoint( 131, 241 ), 
		CPoint( 129, 241 ),
		CPoint( 96, 241 ), 
		CPoint( 70, 214 ), 
		CPoint( 70, 181 ),
		CPoint( 70, 149 ), 
		CPoint( 96, 122 ), 
		CPoint( 129, 122 ),
		CPoint( 162, 122 ), 
		CPoint( 188, 149 ), 
		CPoint( 188, 182 )
	},

	/* Path 6 */
	{
 		CPoint( 195, 555 ),

		CPoint( 193, 560 ), 
		CPoint( 190, 566 ), 
		CPoint( 188, 570 ),
		CPoint( 182, 578 ), 
		CPoint( 172, 578 ), 
		CPoint( 170, 586 ),
		CPoint( 166, 596 ), 
		CPoint( 168, 606 ), 
		CPoint( 182, 608 ),
		CPoint( 198, 610 ), 
		CPoint( 212, 601 ), 
		CPoint( 218, 594 ),
		CPoint( 222, 589 ), 
		CPoint( 227, 583 ), 
		CPoint( 228, 565 )
	},

	/* Path 7 */
	{
 		CPoint( 373, 552 ),

		CPoint( 374, 555 ), 
		CPoint( 377, 566 ), 
		CPoint( 381, 572 ),
		CPoint( 386, 578 ), 
		CPoint( 396, 578 ), 
		CPoint( 399, 588 ),
		CPoint( 402, 596 ), 
		CPoint( 401, 608 ), 
		CPoint( 386, 610 ),
		CPoint( 371, 612 ), 
		CPoint( 356, 602 ), 
		CPoint( 351, 596 ),
		CPoint( 347, 590 ), 
		CPoint( 341, 584 ), 
		CPoint( 341, 563 )
	},

	/* Path 8 */
	{
 		CPoint( 438, 478 ),

		CPoint( 438, 492 ), 
		CPoint( 434, 505 ), 
		CPoint( 428, 518 ),
		CPoint( 413, 531 ), 
		CPoint( 393, 543 ), 
		CPoint( 373, 552 ),
		CPoint( 362, 556 ), 
		CPoint( 352, 560 ), 
		CPoint( 341, 563 ),
		CPoint( 321, 568 ), 
		CPoint( 300, 572 ), 
		CPoint( 281, 572 ),
		CPoint( 264, 572 ), 
		CPoint( 246, 569 ), 
		CPoint( 228, 565 ),
		CPoint( 217, 562 ), 
		CPoint( 206, 559 ), 
		CPoint( 195, 555 ),
		CPoint( 173, 546 ), 
		CPoint( 152, 535 ), 
		CPoint( 134, 521 ),
		CPoint( 127, 507 ), 
		CPoint( 123, 492 ), 
		CPoint( 123, 476 ),
		CPoint( 123, 411 ), 
		CPoint( 194, 366 ), 
		CPoint( 281, 366 ),
		CPoint( 367, 366 ), 
		CPoint( 438, 412 ), 
		CPoint( 438, 478 )
	},

	/* Path 9 */
	{
 		CPoint( 510, 360 ),

		CPoint( 510, 367 ), 
		CPoint( 507, 372 ), 
		CPoint( 504, 376 ),
		CPoint( 502, 379 ), 
		CPoint( 499, 380 ), 
		CPoint( 496, 382 ),
		CPoint( 492, 385 ), 
		CPoint( 486, 386 ), 
		CPoint( 480, 386 ),
		CPoint( 481, 406 ), 
		CPoint( 479, 425 ), 
		CPoint( 474, 443 ),
		CPoint( 474, 445 ), 
		CPoint( 473, 447 ), 
		CPoint( 473, 449 ),
		CPoint( 472, 451 ), 
		CPoint( 472, 452 ), 
		CPoint( 472, 453 ),
		CPoint( 466, 469 ), 
		CPoint( 459, 483 ), 
		CPoint( 448, 496 ),
		CPoint( 443, 504 ), 
		CPoint( 436, 511 ), 
		CPoint( 428, 517 ),
		CPoint( 434, 505 ), 
		CPoint( 438, 491 ), 
		CPoint( 438, 477 ),
		CPoint( 438, 412 ), 
		CPoint( 367, 366 ), 
		CPoint( 280, 366 ),
		CPoint( 194, 366 ), 
		CPoint( 122, 411 ), 
		CPoint( 122, 476 ),
		CPoint( 122, 492 ), 
		CPoint( 127, 507 ), 
		CPoint( 134, 521 ),
		CPoint( 124, 513 ), 
		CPoint( 116, 505 ), 
		CPoint( 108, 495 ),
		CPoint( 87, 467 ), 
		CPoint( 75, 432 ), 
		CPoint( 76, 394 ),
		CPoint( 72, 395 ), 
		CPoint( 69, 396 ), 
		CPoint( 62, 396 ),
		CPoint( 54, 398 ), 
		CPoint( 40, 395 ), 
		CPoint( 38, 380 ),
		CPoint( 36, 366 ), 
		CPoint( 48, 356 ), 
		CPoint( 55, 354 ),
		CPoint( 60, 353 ), 
		CPoint( 67, 353 ), 
		CPoint( 78, 349 ),
		CPoint( 79, 349 ), 
		CPoint( 80, 348 ), 
		CPoint( 82, 348 ),
		CPoint( 88, 319 ), 
		CPoint( 100, 291 ), 
		CPoint( 115, 266 ),
		CPoint( 121, 257 ), 
		CPoint( 127, 249 ), 
		CPoint( 134, 241 ),
		CPoint( 149, 222 ), 
		CPoint( 167, 207 ), 
		CPoint( 187, 195 ),
		CPoint( 196, 190 ), 
		CPoint( 206, 185 ), 
		CPoint( 216, 181 ),
		CPoint( 235, 174 ), 
		CPoint( 256, 169 ), 
		CPoint( 278, 169 ),
		CPoint( 299, 169 ), 
		CPoint( 319, 173 ), 
		CPoint( 338, 179 ),
		CPoint( 348, 183 ), 
		CPoint( 358, 187 ), 
		CPoint( 367, 192 ),
		CPoint( 388, 204 ), 
		CPoint( 407, 220 ), 
		CPoint( 424, 238 ),
		CPoint( 430, 245 ), 
		CPoint( 435, 253 ), 
		CPoint( 441, 261 ),
		CPoint( 456, 283 ), 
		CPoint( 467, 309 ), 
		CPoint( 474, 336 ),
		CPoint( 483, 339 ), 
		CPoint( 490, 339 ), 
		CPoint( 494, 340 ),
		CPoint( 501, 342 ), 
		CPoint( 512, 345 ), 
		CPoint( 510, 360 )
	},

	/* Path 10 */
	{
 		CPoint( 308, 300 ),

		CPoint( 307, 302 ), 
		CPoint( 305, 301 ), 
		CPoint( 302, 302 ),
		CPoint( 298, 303 ), 
		CPoint( 300, 309 ), 
		CPoint( 296, 314 ),
		CPoint( 292, 323 ), 
		CPoint( 280, 324 ), 
		CPoint( 280, 324 ),
		CPoint( 273, 324 ), 
		CPoint( 264, 322 ), 
		CPoint( 260, 316 ),
		CPoint( 258, 312 ), 
		CPoint( 258, 308 ), 
		CPoint( 254, 308 ),
		CPoint( 252, 307 ), 
		CPoint( 251, 308 ), 
		CPoint( 248, 308 ),
		CPoint( 247, 307 ), 
		CPoint( 245, 305 ), 
		CPoint( 246, 304 ),
		CPoint( 246, 302 ), 
		CPoint( 247, 302 ), 
		CPoint( 248, 302 ),
		CPoint( 252, 304 ), 
		CPoint( 264, 310 ), 
		CPoint( 278, 308 ),
		CPoint( 290, 306 ), 
		CPoint( 302, 298 ), 
		CPoint( 304, 296 ),
		CPoint( 306, 294 ), 
		CPoint( 308, 299 ), 
		CPoint( 308, 300 )
	},

	/* Path 11 */
	{
 		CPoint( 200, 234 ),

		CPoint( 200, 236 ), 
		CPoint( 200, 236 ), 
		CPoint( 198, 236 ),
		CPoint( 198, 237 ), 
		CPoint( 196, 237 ), 
		CPoint( 195, 237 ),
		CPoint( 194, 237 ), 
		CPoint( 192, 237 ), 
		CPoint( 192, 238 ),
		CPoint( 189, 239 ), 
		CPoint( 188, 240 ), 
		CPoint( 188, 240 ),
		CPoint( 188, 238 ), 
		CPoint( 190, 232 ), 
		CPoint( 196, 232 ),
		CPoint( 197, 232 ), 
		CPoint( 198, 233 ), 
		CPoint( 198, 233 ),
		CPoint( 199, 233 ), 
		CPoint( 200, 234 ), 
		CPoint( 200, 234 )
	},

	/* Path 12 */
	{
 		CPoint( 280, 292 ),

		CPoint( 279, 293 ), 
		CPoint( 279, 293 ), 
		CPoint( 278, 292 )
	},
	{
 		CPoint( 272, 286 ),

		CPoint( 271, 286 ), 
		CPoint( 271, 284 ), 
		CPoint( 272, 284 )
	},
	{
 		CPoint( 286, 284 ),

		CPoint( 287, 284 ), 
		CPoint( 287, 286 ), 
		CPoint( 286, 286 )
	},

	/* Path 13 */
	{
 		CPoint( 354, 232 ),

		CPoint( 354, 234 ), 
		CPoint( 348, 234 ), 
		CPoint( 346, 234 ),
		CPoint( 345, 234 ), 
		CPoint( 344, 233 ), 
		CPoint( 344, 232 ),
		CPoint( 344, 230 ), 
		CPoint( 345, 230 ), 
		CPoint( 346, 230 ),
		CPoint( 348, 230 ), 
		CPoint( 354, 231 ), 
		CPoint( 354, 232 )
	},

	/* Path 14 */
	{
 		CPoint( 348, 201 ),

		CPoint( 348, 204 ), 
		CPoint( 347, 207 ), 
		CPoint( 344, 209 ),
		CPoint( 343, 209 ), 
		CPoint( 341, 210 ), 
		CPoint( 340, 210 ),
		CPoint( 335, 210 ), 
		CPoint( 332, 206 ), 
		CPoint( 332, 201 ),
		CPoint( 332, 197 ), 
		CPoint( 335, 193 ), 
		CPoint( 339, 192 ),
		CPoint( 339, 192 ), 
		CPoint( 340, 192 ), 
		CPoint( 340, 192 ),
		CPoint( 345, 192 ), 
		CPoint( 348, 196 ), 
		CPoint( 348, 201 )
	},

	/* Path 15 */
	{
 		CPoint( 114, 366 ),

		CPoint( 114, 366 ), 
		CPoint( 114, 375 ), 
		CPoint( 96, 384 ),
		CPoint( 85, 390 ), 
		CPoint( 80, 393 ), 
		CPoint( 76, 394 )
	},

	/* Path 16 */
	{
 		CPoint( 82, 348 ),

		CPoint( 91, 343 ), 
		CPoint( 102, 334 ), 
		CPoint( 102, 334 )
	},

	/* Path 17 */
	{
 		CPoint( 292, 308 ),

		CPoint( 292, 309 ), 
		CPoint( 291, 312 ), 
		CPoint( 288, 316 ),
		CPoint( 288, 316 ), 
		CPoint( 288, 316 ), 
		CPoint( 288, 316 ),
		CPoint( 286, 314 ), 
		CPoint( 283, 312 ), 
		CPoint( 280, 312 ),
		CPoint( 275, 312 ), 
		CPoint( 270, 315 ), 
		CPoint( 269, 318 ),
		CPoint( 265, 315 ), 
		CPoint( 263, 311 ), 
		CPoint( 262, 310 ),
		CPoint( 267, 311 ), 
		CPoint( 273, 311 ), 
		CPoint( 280, 310 ),
		CPoint( 285, 310 ), 
		CPoint( 289, 309 ), 
		CPoint( 292, 308 )
	},

	/* Path 18 */
	{
 		CPoint( 288, 316 ),

		CPoint( 282, 322 ), 
		CPoint( 274, 320 ), 
		CPoint( 274, 320 ),
		CPoint( 272, 319 ), 
		CPoint( 270, 318 ), 
		CPoint( 269, 318 ),
		CPoint( 270, 315 ), 
		CPoint( 275, 312 ), 
		CPoint( 280, 312 ),
		CPoint( 283, 312 ), 
		CPoint( 286, 314 ), 
		CPoint( 288, 316 )
	},

	/* Path 19 */
	{
 		CPoint( 200, 234 ),

		CPoint( 200, 236 ), 
		CPoint( 200, 236 ), 
		CPoint( 198, 236 ),
		CPoint( 198, 237 ), 
		CPoint( 196, 237 ), 
		CPoint( 195, 237 ),
		CPoint( 194, 237 ), 
		CPoint( 192, 237 ), 
		CPoint( 192, 238 ),
		CPoint( 189, 239 ), 
		CPoint( 188, 240 ), 
		CPoint( 188, 240 ),
		CPoint( 188, 238 ), 
		CPoint( 190, 232 ), 
		CPoint( 196, 232 ),
		CPoint( 197, 232 ), 
		CPoint( 198, 233 ), 
		CPoint( 198, 233 ),
		CPoint( 199, 233 ), 
		CPoint( 200, 234 ), 
		CPoint( 200, 234 )
	},

	/* Path 20 */
	{
 		CPoint( 448, 320 ),

		CPoint( 448, 320 ), 
		CPoint( 453, 325 ), 
		CPoint( 459, 329 ),
		CPoint( 463, 332 ), 
		CPoint( 468, 334 ), 
		CPoint( 472, 336 ),
		CPoint( 472, 336 ), 
		CPoint( 473, 336 ), 
		CPoint( 474, 336 )
	},

	/* Path 21 */
	{
 		CPoint( 436, 352 ),

		CPoint( 436, 352 ), 
		CPoint( 436, 358 ), 
		CPoint( 452, 372 ),
		CPoint( 461, 382 ), 
		CPoint( 471, 385 ), 
		CPoint( 480, 386 ),
		CPoint( 480, 386 ), 
		CPoint( 480, 386 ), 
		CPoint( 480, 386 )
	}
};

//------------------------------

std::vector<std::vector<CPoint>> lines = {
	/* Path 0 */
	{ 
		CPoint( 585, 377 ), 
		CPoint( 578, 388 ) 
	},
	{ 
		CPoint( 578, 388 ), 
		CPoint( 578, 398 ) 
	},
	{ 
		CPoint( 577, 400 ), 
		CPoint( 561, 420 ) 
	},
	{ 
		CPoint( 554, 419 ), 
		CPoint( 551, 413 ) 
	},
	{ 
		CPoint( 551, 413 ), 
		CPoint( 532, 433 ) 
	},
	{ 
		CPoint( 526, 432 ), 
		CPoint( 524, 428 ) 
	},
	{ 
		CPoint( 524, 428 ), 
		CPoint( 503, 447 ) 
	},
	{ 
		CPoint( 497, 445 ), 
		CPoint( 495, 437 ) 
	},
	{ 
		CPoint( 495, 437 ), 
		CPoint( 475, 453 ) 
	},
	{ 
		CPoint( 475, 443 ), 
		CPoint( 495, 427 ) 
	},
	{ 
		CPoint( 501, 430 ), 
		CPoint( 503, 437 ) 
	},
	{ 
		CPoint( 503, 437 ), 
		CPoint( 522, 419 ) 
	},
	{ 
		CPoint( 528, 419 ), 
		CPoint( 530, 424 ) 
	},
	{ 
		CPoint( 530, 424 ), 
		CPoint( 548, 404 ) 
	},
	{ 
		CPoint( 555, 404 ), 
		CPoint( 558, 410 ) 
	},
	{ 
		CPoint( 558, 410 ), 
		CPoint( 569, 396 ) 
	},
	{ 
		CPoint( 569, 396 ), 
		CPoint( 569, 386 ) 
	},
	{ 
		CPoint( 570, 384 ), 
		CPoint( 577, 374 ) 
	},

	/* Path 4 */
	{ 
		CPoint( 216, 181 ), 
		CPoint( 216, 181 ) 
	},

	/* Path 12 */
	{ 
		CPoint( 286, 286 ), 
		CPoint( 280, 292 ) 
	},
	{ 
		CPoint( 278, 292 ), 
		CPoint( 272, 286 ) 
	},
	{ 
		CPoint( 272, 284 ), 
		CPoint( 286, 284 ) 
	}
};

//------------------------------

std::vector<std::vector<CPoint>> elipses = {

	/* Ellipse 0 */
	{ 
		CPoint( 172, 246 ), 
		CPoint( 236, 304 ) 
	},

	/* Ellipse 1 */
	{ 
		CPoint( 314, 240 ), 
		CPoint( 378, 300 ) 
	},

	/* Circle 0 */
	{ 
		CPoint( 600, 316 ), 
		CPoint( 608, 322 ) 
	},

	/* Circle 1 */
	{ 
		CPoint( 602, 268 ), 
		CPoint( 630, 296 ) 
	},

	/* Circle 2 */
	{ 
		CPoint( 206, 260 ), 
		CPoint( 220, 272 ) 
	},

	/* Circle 3 */
	{ 
		CPoint( 350, 254 ), 
		CPoint( 362, 266 ) 
	}
};

//------------------------------

std::vector<std::vector<CPoint>> arcs = {

};

//------------------------------

if(beziers.size() > 0)
        for (const auto& vec : beziers) {
            pDC->PolyBezier(&vec[0], vec.size());
        }

if(lines.size() > 0)
        for (const auto& points : lines) {
            pDC->MoveTo(points[0].x, points[0].y);
            pDC->LineTo(points[1].x, points[1].y);
        }

if(elipses.size() > 0)
        for (const auto& points : elipses) {
            pDC->Ellipse(points[0].x, points[0].y, points[1].x, points[1].y);
        }

if (arcs.size() > 0)
        for (const auto& points : arcs) {
            if(points[4].x == 1 )
                pDC->SetArcDirection(AD_CLOCKWISE);
            else
                pDC->SetArcDirection(AD_COUNTERCLOCKWISE);
            pDC->Arc(points[0].x, points[0].y, points[1].x, points[1].y, points[2].x, points[2].y, points[3].x, points[3].y);
        }

